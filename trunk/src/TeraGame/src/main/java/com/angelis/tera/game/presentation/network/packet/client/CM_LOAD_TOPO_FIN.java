package com.angelis.tera.game.presentation.network.packet.client;

import java.nio.ByteBuffer;
import java.util.concurrent.TimeUnit;

import com.angelis.tera.game.presentation.network.SystemMessages;
import com.angelis.tera.game.presentation.network.connection.TeraGameConnection;
import com.angelis.tera.game.presentation.network.packet.TeraClientPacket;
import com.angelis.tera.game.presentation.network.packet.server.SM_ACHIEVEMENT_PROGRESS_UPDATE;
import com.angelis.tera.game.presentation.network.packet.server.SM_CREATURE_UNK;
import com.angelis.tera.game.presentation.network.packet.server.SM_F2P_PREMIUM_USER_PERMISSION;
import com.angelis.tera.game.presentation.network.packet.server.SM_GATHERCRAFT_POINT;
import com.angelis.tera.game.presentation.network.packet.server.SM_OPCODE_LESS_PACKET;
import com.angelis.tera.game.presentation.network.packet.server.SM_OWN_PLAYER_SPAWN;
import com.angelis.tera.game.presentation.network.packet.server.SM_PEGASUS_START;
import com.angelis.tera.game.presentation.network.packet.server.SM_PLAYER_CHANNEL_INFO;
import com.angelis.tera.game.presentation.network.packet.server.SM_PLAYER_FRIEND_LIST;
import com.angelis.tera.game.presentation.network.packet.server.SM_PLAYER_GATHER_STATS;
import com.angelis.tera.game.presentation.network.packet.server.SM_PLAYER_STATS_UPDATE;
import com.angelis.tera.game.presentation.network.packet.server.SM_USER_SETTINGS_LOAD;
import com.angelis.tera.game.process.model.channel.Channel;
import com.angelis.tera.game.process.model.creature.AbstractCreature;
import com.angelis.tera.game.process.model.player.Player;
import com.angelis.tera.game.process.model.visible.VisibleTeraObject;
import com.angelis.tera.game.process.model.visible.enums.VisibleTypeEnum;
import com.angelis.tera.game.process.services.ThreadPoolService;
import com.angelis.tera.game.process.services.VisibleService;
import com.angelis.tera.game.process.tasks.pegasus.EndPegasusFlyTask;

public class CM_LOAD_TOPO_FIN extends TeraClientPacket {

    public CM_LOAD_TOPO_FIN(final ByteBuffer byteBuffer, final TeraGameConnection connection) {
        super(byteBuffer, connection);
    }

    @Override
    protected void readImpl() {
        // Empty packet
    }

    @Override
    protected void runImpl() {
        final TeraGameConnection connection = this.getConnection();
        final Player player = connection.getActivePlayer();
        
        connection.sendPacket(new SM_PLAYER_FRIEND_LIST(player));
        connection.sendPacket(new SM_OPCODE_LESS_PACKET("264F00000000"));
        connection.sendPacket(new SM_OPCODE_LESS_PACKET("DF6300000000"));
        
        // CONTROLLERS
        connection.sendPacket(new
        connection.sendPacket(new SM_USER_SETTINGS_LOAD(player));
        
        connection.sendPacket(new SM_OPCODE_LESS_PACKET("25F20000000000000000"));
        connection.sendPacket(SystemMessages.CONNECT_ON_TERA_EUROPE_FOR_LAST_NEWS());
        
        connection.sendPacket(new SM_OPCODE_LESS_PACKET("E7B20000000000000000"));
        connection.sendPacket(new SM_OWN_PLAYER_SPAWN(player));
        
        connection.sendPacket(new SM_OPCODE_LESS_PACKET("4361000000004F430E0000800002"));
        if (player.getCurrentStats().getStamina() == 120) {
            connection.sendPacket(SystemMessages.YOU_HAVE_ABUNDANT_STAMINA());
        }
        
        connection.sendPacket(new SM_OPCODE_LESS_PACKET("4DBD4F430E00008000027CC4000001FFFFFF7F"));
        
        connection.sendPacket(new SM_PLAYER_STATS_UPDATE(player));
        connection.sendPacket(new SM_PLAYER_GATHER_STATS(player.getGatherStats()));
        connection.sendPacket(new SM_F2P_PREMIUM_USER_PERMISSION());
        
        player.getKnownList().clear();
        player.getKnownList().update();
        
        connection.sendPacket(new SM_OPCODE_LESS_PACKET("48F3000000000000000000000000"));
        
        // This packet contains lot of P and Q
        connection.sendPacket(new
        
        connection.sendPacket(new SM_ACHIEVEMENT_PROGRESS_UPDATE(player));
        
        connection.sendPacket(new SM_OPCODE_LESS_PACKET("1388010009000009000000B20100002EA4F82B00000000FFFFFF7F0000000000000000"));
        
        connection.sendPacket(new SM_PLAYER_STATS_UPDATE(player));
        connection.sendPacket(new SM_PLAYER_GATHER_STATS(player.getGatherStats()));
        connection.sendPacket(new SM_F2P_PREMIUM_USER_PERMISSION());
        
        connection.sendPacket(new SM_OPCODE_LESS_PACKET("2FD74F430E00008000020000000000"));
        connection.sendPacket(new SM_OPCODE_LESS_PACKET("67DF000000004F430E0000800002"));
        connection.sendPacket(new SM_OPCODE_LESS_PACKET("A8DF"));
        connection.sendPacket(new SM_OPCODE_LESS_PACKET("DCB300000000"));
        
        final Channel channel = player.getChannel();
        // TODO channel should not be null
        if (channel != null) {
            connection.sendPacket(new SM_PLAYER_CHANNEL_INFO(channel, player.getWorldPosition().getMapId()));
        }
        connection.sendPacket(new SM_OPCODE_LESS_PACKET("B6630D0000000A00000000000000"));
        connection.sendPacket(new SM_OPCODE_LESS_PACKET("4CF5FFFFFFFF4F430E0000800002")); // THIS COULD BE TEMP INVUL START
        connection.sendPacket(new SM_OPCODE_LESS_PACKET("4CF5FFFFFFFF4F430E0000800002"));
        connection.sendPacket(new SM_OPCODE_LESS_PACKET("88F5000000004F430E0000800002")); // THIS COULD BE TEMP INVUL END
        
        switch (connection.getAccount().getAccountType()) {
            case NORMAL:
                // TODO
            break;
            
            case VETERAN:
                connection.sendPacket(SystemMessages.ACCOUNT_BENEFIT("433"));
            break;
            
            case PREMIUM:
                connection.sendPacket(SystemMessages.ACCOUNT_BENEFIT("434"));
            break;
        }
        connection.sendPacket(new SM_GATHERCRAFT_POINT(player));
        connection.sendPacket(new SM_OPCODE_LESS_PACKET("33504F430E000080000200000000000000000000000001"));
        
        if (player.getActivePegasus() != null) {
            VisibleService.getInstance().sendPacketForVisible(player, new SM_PEGASUS_START(player, 1));
            ThreadPoolService.getInstance().scheduleRepeatableTask(new EndPegasusFlyTask(player), 0, 3000, TimeUnit.MILLISECONDS);
        }
        
        for (final VisibleTeraObject visibleTeraObject : player.getKnownList().getVisible(VisibleTypeEnum.CREATURE)) {
            connection.sendPacket(new SM_CREATURE_UNK((AbstractCreature) visibleTeraObject));
        }
        
        // TODO
        connection.sendPacket(SystemMessages.AN_ITEM_IS_AWAITING_IN_CLAME());
    }
}
